# Входные данные из задания
# workers_list = ["Андрей 9",
#                 "Василий 11",
#                 "Роман 7",
#                 "X Æ A-12 45",
#                 "Иван Петров 3",
#                 "Андрей 6",
#                 "Роман 11"]

# Чуть увеличил список, чтобы чуть по-точнее проверить.
workers_list = [
    "Андрей 9",
    "Василий 11",
    "Роман 7",
    "X Æ A-12 45",
    "Иван Петров 3",
    "Андрей 6",
    "Роман 11",
    "Мария Иванова 120",
    "Сергей 105",
    "Василий 85",
    "Дмитрий 14",
    "X Æ A-12 10",
    "Елизавета 110",
    "Алексей 25",
    "Василий 1",
    "Андрей 150",
    "Роман Сергеев 55",
    "Ольга 78",
    "Иван 13",
    "Петр Сидоров 99",
    "Анна 32",
    "Александр 47",
    "Екатерина 101",
    "Михаил 66",
    "Василий 50",
    "Василий 22",
    "X Æ A-12 12",
    "Андрей Иванов 88",
    "Роман 100",
    "Елизавета 35",
    "Дмитрий 11",
    "Сергей 28",
    "Василий 92",
    "Алексей 10",
    "Роман 15",
    "Мария 42",
    "Иван 57",
    "Петр 115",
    "Анна 14",
    "Александр 12",
    "Екатерина 21",
    "Михаил 74",
    "Василий 64",
    "X Æ A-12 1",
]


# Класс предназначенный для работы с данными сотрудников
class Workers:
    def __init__(self):
        self.logbook = {}

    # Метод принимает в качестве аргумента лист с данными о рабочих часах работников
    def get_total_hours_worked_by_workers(self, data: list):
        # Цикл проходит по каждому элементу списка и заносит в журнал имя работника и список, проработанных им, часов
        for log in data:
            name, hours = log.rsplit(" ", 1)
            hours = int(hours)
            if name in self.logbook:
                self.logbook[name].append(hours)
            else:
                self.logbook[name] = [hours]
        return self.logbook


def main():
    stack = Workers()

    for person in (output := stack.get_total_hours_worked_by_workers(workers_list)):
        hours_str = ", ".join(str(hour) for hour in output[person])
        print(f"{person}: {hours_str}; sum: {sum(output[person])}")


if __name__ == '__main__':
    main()
